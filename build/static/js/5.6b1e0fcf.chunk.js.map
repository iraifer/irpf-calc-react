{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","http/HttpUtil.js","drivers/ImcDriver.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","HttpUtil","hostname","url","obj","console","log","fetch","options","method","headers","body","JSON","stringify","ImcDriver","this","xhr","get","Proxy","apply","target","thisArg","args","then","rawResponse","json","person","a","post","response"],"mappings":"4NAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,G,sBIHzEC,G,0FACnB,SAAIC,EAAUC,EAAKC,GAEjB,OADAC,QAAQC,IAAI,wBACLC,MAAM,GAAD,OAAIL,GAAJ,OAAeC,M,kBAG7B,SAAKD,EAAUC,EAAKC,GAClB,IAAMI,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,mCAElBC,KAAMC,KAAKC,UAAUT,IAGvB,OAAOG,MAAM,GAAD,OAAIL,GAAJ,OAAeC,GAAOK,O,MCfjBM,E,WACnB,aAAe,oBACbC,KAAKC,IAAM,IAAIf,EACfc,KAAKE,IAAM,IAAIC,MAAMH,KAAKC,IAAIC,IAAK,CACjCE,MAAO,SAASC,EAAQC,EAASC,GAQ/B,OAPAjB,QAAQC,IAAI,UACZD,QAAQC,IAAIc,GACZf,QAAQC,IAAI,WACZD,QAAQC,IAAIe,GACZhB,QAAQC,IAAI,QACZD,QAAQC,IAAIgB,GACZjB,QAAQC,IAAI,eACLc,EAAM,WAAN,IAAUE,O,4CAKvB,WACE,OAAOP,KACJE,IAAI,wBAAyB,cAC7BM,MAAK,SAAUC,GACd,OAAOA,EAAYC,Y,8DAQzB,WAAgBC,GAAhB,eAAAC,EAAA,sEACyBZ,KAAKC,IACzBY,KAAK,wBAAyB,iBAAkBF,GAFrD,cACQG,EADR,gBAIeA,EAASJ,OAJxB,wF","file":"static/js/5.6b1e0fcf.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import 'whatwg-fetch'\r\n\r\nexport default class HttpUtil {\r\n  get(hostname, url, obj) {\r\n    console.log('vai chamar fetch !!!');\r\n    return fetch(`${hostname}${url}`);\r\n  }\r\n\r\n  post(hostname, url, obj) {\r\n    const options = {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8'\r\n      },\r\n      body: JSON.stringify(obj)\r\n    };\r\n    \r\n    return fetch(`${hostname}${url}`, options);\r\n  }\r\n}\r\n","import HttpUtil from '../http/HttpUtil.js';\r\n\r\nexport default class ImcDriver {\r\n  constructor() {\r\n    this.xhr = new HttpUtil();\r\n    this.get = new Proxy(this.xhr.get, {\r\n      apply: function(target, thisArg, args) {\r\n        console.log('target');\r\n        console.log(target);\r\n        console.log('thisArg');\r\n        console.log(thisArg);\r\n        console.log('args');\r\n        console.log(args);\r\n        console.log('chamando...');\r\n        return target(...args);\r\n      }\r\n    });\r\n  }\r\n\r\n  getTable() {\r\n    return this\r\n      .get('http://localhost:8080', '/imc/table')\r\n      .then(function (rawResponse) {\r\n        return rawResponse.json();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {Person} person \r\n   */\r\n  async calculate(person) {\r\n    const response = await this.xhr\r\n      .post('http://localhost:8080', '/imc/calculate', person);\r\n\r\n    return await response.json();\r\n  }\r\n}\r\n"],"sourceRoot":""}